heat_template_version: 2016-04-08
## cli deploy
#$ openstack stack create --template heat-minipoc.yaml mini-poc

description: >
  HOT template to create 2 neutron networks, 2 generic VMs a Fortios VM
  in between and floating ip for everyone.

parameters:
  fgtimage:
    type: string
    description: Fortios image
    default: "fgt604"
  ubimage:
    type: string
    description: Ubuntu image
    default: "Trusty x86_64"
  mgmt_net:
    type: string
    description: My private network
    default: "mgmt"
  public_net:
    type: string
    description: External network for floating ips
    default: "ext_net"
  vms_flavor:
    type: string
    description: Flavor of the VMs
    default: "m1.small"
  ub_nic2_name:
    type: string
    description: Name of the second interface on Ubuntu may vary
    default: "eth1"
  dns_name_fgt:
    type: string
    description: DNS name for FGT with floating IP
    default: "fgt01"

resources:
  fgt_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config: |
        config system admin
        edit "User1"
        set accprofile "super_admin"
        set vdom "root"
        set password fortinet
        next
        end
        config system interface
        edit port1
        set mode dhcp
        set allowaccess ping https ssh http snmp fgfm
        set defaultgw enable 
        next
        edit port2
        set mode dhcp
        set allowaccess ping
        set defaultgw disable 
        next
        edit port3
        set mode dhcp
        set allowaccess ping
        set defaultgw disable 
        next
        end
        config firewall policy
        edit 1
        set name "Allow any any"
        set srcintf "any"
        set dstintf "any"
        set srcaddr "all"
        set dstaddr "all"
        set action accept
        set schedule "always"
        set service "ALL"
        set nat enable
        next
        end

# fgt_license:
 # type: OS::Heat::SoftwareConfig
  #properties:
   # group: ungrouped
    #config: |
     #  -----BEGIN FGT VM LICENSE-----
      # xXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXA
      # xXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXA
      # xXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdE
      # -----END FGT VM LICENSE-----

  fgt_init:
    type: OS::Heat::MultipartMime
    properties:
      parts:
        - config: {get_resource: fgt_config}
        # - config: {get_resource: fgt_license}

  ub_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config:
        str_replace:
          template: |
            # cloud-config for citycloud using new schema ens
            chpasswd:
              list: |
                ubuntu:fortinet
              expire: False
            write_files:
              - content: |
                  # Enable dhcp on ens4 some use the new schema
                  auto $nic2
                  iface $nic2 inet dhcp
                path: /etc/network/interfaces.d/51-$nic2.cfg
            package_upgrade: true
            packages:
              - apache2-utils
              - apache2
              - tcpdump
              - iperf3
            power_state:
              mode: reboot
              message: Rebooting to ensure network conf
              timeout: 10
              condition: True
          params:
            $nic2:  { get_param: ub_nic2_name }

### FLOATING IP ###

  fgt_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
      # dns_name: { get_param: dns_name_fgt }

  ubr_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }

  ubl_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }

### LEFT SUBNET ###

  left_net:
    type: OS::Neutron::Net
    properties:
      name: "left"

  left_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: left_net }
      cidr: "10.40.40.0/24"
      gateway_ip: null
      allocation_pools:
        - start: "10.40.40.3"
          end:  "10.40.40.250"
      host_routes: [{"nexthop": "10.40.40.254", "destination": "10.20.20.0/24"}]

### RIGHT SUBNET ###

  right_net:
    type: OS::Neutron::Net
    properties:
      name: "right"

  right_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: right_net }
      cidr: "10.20.20.0/24"
      gateway_ip: null
      allocation_pools:
        - start: "10.20.20.3"
          end:  "10.20.20.250"

### FGT ###

  fgt_mgmt_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: mgmt_net }
      security_groups: [ SecG1 ]

  fgt_left_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: left_net }
      fixed_ips:
        - ip_address: "10.40.40.254"
      
  fgt_right_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: right_net }
      fixed_ips:
        - ip_address: "10.20.20.254"

  fgt:
    type: OS::Nova::Server
    properties:
      image: { get_param: fgtimage }
      flavor: { get_param: vms_flavor }
      user_data: { get_resource: fgt_config }
      config_drive: True
      name: FGT
      user_data_format: RAW
      # personality: {"license": { get_attr: [fgt_license, config] }}
      networks:
        - port: { get_resource: fgt_mgmt_port }
        - port: { get_resource: fgt_left_port }
        - port: { get_resource: fgt_right_port }

  association_fgt:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: fgt_floating_ip }
      port_id: { get_resource: fgt_mgmt_port }

### UBUNTU LEFT ###

  ubl_mgmt_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: mgmt_net }
      security_groups: [ SecG1 ]
  
  ubleft:
    type: OS::Nova::Server
    properties:
      image: { get_param: ubimage }
      flavor: { get_param: vms_flavor }
      key_name: "default"
      user_data_format: RAW
      user_data: { get_resource: ub_config }
      name: trafleft
      networks:
        - port: { get_resource: ubl_mgmt_port }
        - subnet:  { get_resource: left_subnet }

  association_ubleft:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: ubl_floating_ip }
      port_id: { get_resource: ubl_mgmt_port }

### UBUNTU RIGHT ###

  ubr_mgmt_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: mgmt_net }
      security_groups: [ SecG1 ]

  ubright:
    type: OS::Nova::Server
    properties:
      image: { get_param: ubimage }
      flavor: { get_param: vms_flavor }
      key_name: "default"
      user_data_format: RAW
      user_data: { get_resource: ub_config }
      name: trafright
      networks:
        - port: { get_resource: ubr_mgmt_port }
        - subnet:  { get_resource: right_subnet }

  association_ubright:
    type: OS::Neutron::FloatingIPAssociation
    properties:
      floatingip_id: { get_resource: ubr_floating_ip }
      port_id: { get_resource: ubr_mgmt_port }

outputs:
  fgt-info:
    description: IP address to access of the FGT
    value: { get_attr: [ fgt_floating_ip,  floating_ip_address ] }
  left-info:
    description: IP address to access left ubuntu machine 
    value: { get_attr: [ ubl_floating_ip,  floating_ip_address ] }
  right-info:
    description: IP address to access right ubuntu machine 
    value: { get_attr: [ ubr_floating_ip,  floating_ip_address ] }
