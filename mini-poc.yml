heat_template_version: 2018-03-02
# 2016-10-14 | newton
# 2017-02-24 | ocata
# 2017-09-01 | pike
# 2018-03-02 | queens
# 2018-08-31 | rocky
## cli deploy
#$ openstack stack create --template heat-minipoc.yaml mini-poc
# - 2 manieres de config les serveurs : cf. fgt vs Ubuntu
# - la fonction get_file prend le fichier brute et elle se remplace par le contenu du fichier
#     ainsi on peut combiner la fonction avec str_replace pour avoir des paramÃ¨tres modifiables
#     dans le script
# - l'association des IP flotante peut se faire directement avec le port_id dans OS::Neutron::FloatingIP

description: >
  HOT template to create 2 neutron networks, 2 generic VMs a Fortios VM
  in between and floating ip for everyone.

parameters:
  fgtimage:
    type: string
    description: Fortios image
    default: "fgt604"
  ubimage:
    type: string
    description: Ubuntu image
    default: "Trusty x86_64"
  mgmt_net:
    type: string
    description: My private network
    default: "mgmt"
  public_net:
    type: string
    description: External network for floating ips
    default: "ext_net"
  fgt_flavor:
    type: string
    description: Flavor of the VMs
    default: "m1.small"
  ubuntu_flavor:
    type: string
    description: Flavor of the Ubuntu VMs
    default: "m1.tiny"
  ub_nic2_name:
    type: string
    description: Name of the second interface for Ubuntu VM
    default: "eth1"

resources:
  fgt_config:
    type: OS::Heat::SoftwareConfig
    properties:
      group: ungrouped
      config: { get_file: ./fgt.conf }

  # fgt_license:
  #   type: OS::Heat::SoftwareConfig
  #   properties:
  #     group: ungrouped
  #     config: |
  #       -----BEGIN FGT VM LICENSE-----
  #       xXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXA
  #       xXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXA
  #       xXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdExXxxXAbCdE
  #       -----END FGT VM LICENSE-----

  # fgt_init:
  #   type: OS::Heat::MultipartMime
  #   properties:
  #     parts:
  #       - config: {get_resource: fgt_config}
  #       - config: {get_resource: fgt_license}

### FLOATING IP ###

  fgt_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
      port_id: { get_resource: fgt_mgmt_port }

  ubr_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
      port_id: { get_resource: ubr_mgmt_port }

  ubl_floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: { get_param: public_net }
      port_id: { get_resource: ubl_mgmt_port }

### LEFT SUBNET ###

  left_net:
    type: OS::Neutron::Net
    properties:
      name: "left"

  left_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: left_net }
      cidr: "10.40.40.0/24"
      gateway_ip: null
      allocation_pools:
        - start: "10.40.40.3"
          end:  "10.40.40.250"
      host_routes: [{"nexthop": "10.40.40.254", "destination": "10.20.20.0/24"}]

### RIGHT SUBNET ###

  right_net:
    type: OS::Neutron::Net
    properties:
      name: "right"

  right_subnet:
    type: OS::Neutron::Subnet
    properties:
      network_id: { get_resource: right_net }
      cidr: "10.20.20.0/24"
      gateway_ip: null
      allocation_pools:
        - start: "10.20.20.3"
          end:  "10.20.20.250"

### FGT ###

  fgt_mgmt_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: mgmt_net }
      security_groups: [ SecG1 ]

  fgt_left_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: left_net }
      fixed_ips:
        - ip_address: "10.40.40.254"
      
  fgt_right_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: right_net }
      fixed_ips:
        - ip_address: "10.20.20.254"

  fgt:
    type: OS::Nova::Server
    properties:
      image: { get_param: fgtimage }
      flavor: { get_param: fgt_flavor }
      user_data_format: RAW
      user_data: { get_file: ./fgt.conf }
      config_drive: True
      name: FGT
      # personality: {"license": { get_attr: [fgt_license, config] }}
      networks:
        - port: { get_resource: fgt_mgmt_port }
        - port: { get_resource: fgt_left_port }
        - port: { get_resource: fgt_right_port }

### UBUNTU LEFT ###

  ubl_mgmt_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: mgmt_net }
      security_groups: [ SecG1 ]
  
  ubleft:
    type: OS::Nova::Server
    properties:
      image: { get_param: ubimage }
      flavor: { get_param: ubuntu_flavor }
      key_name: "default"
      user_data_format: RAW
      user_data:
        str_replace:
          template: { get_file: ./ubuntu.conf }
          params:
            $INTERFACE: { get_param: ub_nic2_name }
      name: trafleft
      networks:
        - port: { get_resource: ubl_mgmt_port }
        - subnet:  { get_resource: left_subnet }

### UBUNTU RIGHT ###

  ubr_mgmt_port:
    type: OS::Neutron::Port
    properties:
      network: { get_param: mgmt_net }
      security_groups: [ SecG1 ]

  ubr_port:
    type: OS::Neutron::Port
    properties:
      network: { get_resource: right_net }

  ubright:
    type: OS::Nova::Server
    properties:
      image: { get_param: ubimage }
      flavor: { get_param: ubuntu_flavor }
      key_name: "default"
      user_data_format: RAW
      user_data:
        str_replace:
          template: { get_file: ./ubuntu.conf }
          params:
            $INTERFACE: { get_param: ub_nic2_name }
      name: trafright
      networks:
        - port: { get_resource: ubr_mgmt_port }
        - port: { get_resource: ubr_port }

# Doc for outputs
# https://docs.openstack.org/heat/latest/template_guide/hot_spec.html#outputs-section
# https://docs.openstack.org/heat/latest/template_guide/hot_spec.html#hot-spec-intrinsic-functions
outputs:
  fgt-info:
    description: IP address to access of the FGT
    value: { get_attr: [fgt_floating_ip, floating_ip_address] }
  left-info:
    description: IP address to access left ubuntu machine 
    value: { get_attr: [ubl_floating_ip, floating_ip_address] }
  right-info:
    description: IP address to access right ubuntu machine 
    value: { get_attr: [ubr_floating_ip, floating_ip_address] }
